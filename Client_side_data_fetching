
Client Side Data Fetching

pages/users/index.jsx

import { useEffect, useState } from "react";

const UserPage = () => {
    const [users, setUsers] = useState([]);

    console.log('users:', users); // Debugging to check fetched data

    useEffect(() => {
        async function fetchUser() {
            try {
                const response = await fetch("https://summy.json");
                const data = await response.json();
                setUsers(data);
            } catch (error) {
                console.error("Error fetching users:", error);
            }
        }
        fetchUser();
    }, []);

    return (
        <div>
            <h1>Users</h1>
            <ul>
                {users.length > 0 &&
                    users.map((user) => (
                        <Link href={'/users/${user.id}'} key={user.id}>{user.firstName}</Link>
                    ))
                }
            </ul>
        </div>
    );
};

export default UserPage;

now agar hame lets say ek name pe ckick karenge to naya page kkhulega 
to ham users ke andar ek folder banayenge [id] aur uske andar ek index.jsx

index.jsx

import { useEffect, useState } from "react";
import { useRouter } from "next/router";

const UserInfoPage = () => {
    const [userInfo, setUserInfo] = useState(null);
    const router = useRouter();

    useEffect(() => {
        if (!router.query.id) return; // Prevent running when id is undefined

        async function getUserById(id) {
            try {
                const response = await fetch(`https://dummyapi.com/users/${id}`);
                const data = await response.json();
                setUserInfo(data);
            } catch (error) {
                console.error("Error fetching user:", error);
            }
        }

        getUserById(router.query.id);
    }, [router.query.id]);

    return (
        <div>
            <h1>User Info</h1>
            {userInfo ? (
                <div>
                    <p>Name: {userInfo.name}</p>
                    <p>Email: {userInfo.email}</p>
                </div>
            ) : (
                <p>Loading user info...</p>
            )}
        </div>
    );
};

export default UserInfoPage;

we can also use SWR unplace of useffect inorder to make process fast and it also includes caching means it stores data into local storage


import useSWR from "swr";
import { useRouter } from "next/router";

const fetcher = (url) => fetch(url).then((res) => res.json()); // SWR Fetcher Function

const UserInfoPage = () => {
    const router = useRouter();
    const { id } = router.query; // Get user ID from query params

    // Use SWR for data fetching
    const { data: userInfo, error, isLoading } = useSWR(
        id ? `https://dummyapi.com/users/${id}` : null, 
        fetcher
    );

    if (isLoading) return <p>Loading user info...</p>;
    if (error) return <p>Error loading user info.</p>;
    if (!userInfo) return <p>No user found.</p>;

    return (
        <div>
            <h1>User Info</h1>
            <p>Name: {userInfo.name}</p>
            <p>Email: {userInfo.email}</p>
        </div>
    );
};

export default UserInfoPage;




















